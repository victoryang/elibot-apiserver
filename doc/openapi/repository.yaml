swagger: '2.0'
info: 
  title: openapi for elibot api-server
  version: 0.1.0
host: http://192.168.1.253:9000
basePath: /
schemes:
  - http
  - https
paths:
  /v2/robot/repository/arcparam/{file_no}/{md_id}:
    put:
      tags:
      - setArcParam
      description: setArcParam [md_id] [value] [file_no] [index]
      operationId: setArcParam
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: request
        in: body
        description: request body structure
        required: true
        schema:
          $ref: '#/definitions/RequestBody1'
      responses:
        default:
          description: All responses will return a message to indicate the result
          schema:
            $ref: '#/definitions/ResponseBody'

  /v2/robot/repository/interference/{no}/{md_id}:
    put:
      tags:
      - setInterference
      description: setInterference [md_id] [value] [no] [index]
      operationId: setInterference
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: request
        in: body
        description: request body structure
        required: true
        schema:
          $ref: '#/definitions/RequestBody1'
      responses:
        default:
          description: All responses will return a message to indicate the result
          schema:
            $ref: '#/definitions/ResponseBody'

  /v2/robot/repository/params/{md_id}:
    put:
      tags:
      - setParam
      description: setParam [md_id] [value] [index]
      operationId: setParam
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: request
        in: body
        description: request body structure
        required: true
        schema:
          $ref: '#/definitions/RequestBody1'
      responses:
        default:
          description: All responses will return a message to indicate the result
          schema:
            $ref: '#/definitions/ResponseBody'

  /v2/robot/repository/toolframes/{tool_no}/{md_id}/pos/{pos_no}:
    put:
      tags:
      - setToolFrame
      description: setToolFrame [md_id] [value] [tool_no] [pos_no|index] [index]
      operationId: setToolFrame
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: request
        in: body
        description: request body structure
        required: true
        schema:
          $ref: '#/definitions/RequestBody1'
      responses:
        default:
          description: All responses will return a message to indicate the result
          schema:
            $ref: '#/definitions/ResponseBody'

  /v2/robot/repository/userframe/{userno}/{md_id}:
    put:
      tags:
      - setUserFrame
      description: setUserFrame [md_id] [value] [userNo]
      operationId: setUserFrame
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: request
        in: body
        description: request body structure
        required: true
        schema:
          $ref: '#/definitions/RequestBody2'
      responses:
        default:
          description: All responses will return a message to indicate the result
          schema:
            $ref: '#/definitions/ResponseBody'

  /v2/robot/repository/zeropoint/{md_id}:
    put:
      tags:
      - setZeroPoint
      description: setZeroPoint [md_id] [value] [index]
      operationId: setZeroPoint
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: request
        in: body
        description: request body structure
        required: true
        schema:
          $ref: '#/definitions/RequestBody1'
      responses:
        default:
          description: All responses will return a message to indicate the result
          schema:
            $ref: '#/definitions/ResponseBody'

definitions:
  RequestBody:
    type: object
    required:
    - value
    properties:
      value:
        type: string
      index:
        type: string
      notes:
        type: string
  RequestBody1:
    type: object
    required:
    - value
    properties:
      value:
        type: string
      index:
        type: string
  RequestBody2:
    type: object
    required:
    - value
    properties:
      value:
        type: string
  ResponseBody:
    type: object
    required:
    - msg
    properties:
     msg:
      type: string
    example:
      msg: 1